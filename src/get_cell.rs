
use rayon::prelude::*;
use std::collections::HashMap;

use phantom_zone::*;

type Ciphertext = FheBool;

enum GateInput {
    Arg(usize, usize), // arg + index
    Output(usize), // reuse of output wire
    Tv(usize),  // temp value
    Cst(bool),  // constant
}

use GateInput::*;

#[derive(PartialEq, Eq, Hash)]
enum CellType {
    AND2,
    NAND2,
    XOR2,
    XNOR2,
    OR2,
    NOR2,
    INV,
    // TODO: Add back MUX2
}

use CellType::*;


static LEVEL_0: [((usize, bool, CellType), &[GateInput]); 26] = [
    ((442, false, NOR2), &[Arg(2, 21), Arg(2, 22)]),
    ((443, false, NOR2), &[Arg(2, 20), Arg(2, 23)]),
    ((445, false, NOR2), &[Arg(2, 16), Arg(2, 17)]),
    ((446, false, NOR2), &[Arg(2, 18), Arg(2, 19)]),
    ((449, false, NOR2), &[Arg(2, 28), Arg(2, 29)]),
    ((450, false, NOR2), &[Arg(2, 30), Arg(2, 31)]),
    ((452, false, NOR2), &[Arg(2, 24), Arg(2, 25)]),
    ((453, false, NOR2), &[Arg(2, 26), Arg(2, 27)]),
    ((457, false, NOR2), &[Arg(2, 13), Arg(2, 14)]),
    ((458, false, NOR2), &[Arg(2, 12), Arg(2, 15)]),
    ((460, false, NOR2), &[Arg(2, 9), Arg(2, 10)]),
    ((461, false, NOR2), &[Arg(2, 8), Arg(2, 11)]),
    ((465, false, NOR2), &[Arg(2, 4), Arg(2, 5)]),
    ((466, false, NOR2), &[Arg(2, 6), Arg(2, 7)]),
    ((472, false, NOR2), &[Arg(2, 52), Arg(2, 53)]),
    ((473, false, NOR2), &[Arg(2, 54), Arg(2, 55)]),
    ((475, false, NOR2), &[Arg(2, 49), Arg(2, 50)]),
    ((476, false, NOR2), &[Arg(2, 48), Arg(2, 51)]),
    ((479, false, NOR2), &[Arg(2, 57), Arg(2, 58)]),
    ((480, false, NOR2), &[Arg(2, 56), Arg(2, 59)]),
    ((482, false, NOR2), &[Arg(2, 60), Arg(2, 61)]),
    ((483, false, NOR2), &[Arg(2, 62), Arg(2, 63)]),
    ((487, false, NOR2), &[Arg(2, 44), Arg(2, 45)]),
    ((488, false, NOR2), &[Arg(2, 46), Arg(2, 47)]),
    ((490, false, NOR2), &[Arg(2, 40), Arg(2, 41)]),
    ((491, false, NOR2), &[Arg(2, 42), Arg(2, 43)]),
];

static LEVEL_1: [((usize, bool, CellType), &[GateInput]); 16] = [
    ((444, false, AND2), &[Tv(442), Tv(443)]),
    ((447, false, AND2), &[Tv(445), Tv(446)]),
    ((451, false, AND2), &[Tv(449), Tv(450)]),
    ((454, false, AND2), &[Tv(452), Tv(453)]),
    ((459, false, AND2), &[Tv(457), Tv(458)]),
    ((462, false, AND2), &[Tv(460), Tv(461)]),
    ((464, false, NOR2), &[Arg(2, 2), Arg(2, 3)]),
    ((467, false, AND2), &[Tv(465), Tv(466)]),
    ((474, false, AND2), &[Tv(472), Tv(473)]),
    ((477, false, AND2), &[Tv(475), Tv(476)]),
    ((481, false, AND2), &[Tv(479), Tv(480)]),
    ((484, false, AND2), &[Tv(482), Tv(483)]),
    ((489, false, AND2), &[Tv(487), Tv(488)]),
    ((492, false, AND2), &[Tv(490), Tv(491)]),
    ((497, false, NOR2), &[Arg(2, 36), Arg(2, 37)]),
    ((498, false, NOR2), &[Arg(2, 38), Arg(2, 39)]),
];

static LEVEL_2: [((usize, bool, CellType), &[GateInput]); 10] = [
    ((17, false, INV), &[Arg(2, 32)]),
    ((448, false, AND2), &[Tv(444), Tv(447)]),
    ((455, false, AND2), &[Tv(451), Tv(454)]),
    ((463, false, AND2), &[Tv(459), Tv(462)]),
    ((468, false, AND2), &[Tv(464), Tv(467)]),
    ((478, false, AND2), &[Tv(474), Tv(477)]),
    ((485, false, AND2), &[Tv(481), Tv(484)]),
    ((493, false, AND2), &[Tv(489), Tv(492)]),
    ((496, false, NOR2), &[Arg(2, 34), Arg(2, 35)]),
    ((499, false, AND2), &[Tv(497), Tv(498)]),
];

static LEVEL_3: [((usize, bool, CellType), &[GateInput]); 8] = [
    ((16, false, INV), &[Arg(2, 33)]),
    ((19, false, INV), &[Arg(2, 0)]),
    ((456, false, AND2), &[Tv(448), Tv(455)]),
    ((469, false, AND2), &[Tv(463), Tv(468)]),
    ((486, false, AND2), &[Tv(478), Tv(485)]),
    ((494, false, AND2), &[Arg(2, 32), Tv(493)]),
    ((500, false, AND2), &[Tv(496), Tv(499)]),
    ((507, false, AND2), &[Tv(17), Tv(493)]),
];

static LEVEL_4: [((usize, bool, CellType), &[GateInput]); 24] = [
    ((18, false, INV), &[Arg(2, 1)]),
    ((20, false, INV), &[Arg(2, 53)]),
    ((21, false, INV), &[Arg(2, 61)]),
    ((23, false, INV), &[Arg(2, 29)]),
    ((25, false, INV), &[Arg(0, 157)]),
    ((26, false, INV), &[Arg(0, 181)]),
    ((27, false, INV), &[Arg(0, 189)]),
    ((28, false, INV), &[Arg(0, 213)]),
    ((29, false, INV), &[Arg(0, 221)]),
    ((30, false, INV), &[Arg(0, 245)]),
    ((31, false, INV), &[Arg(0, 253)]),
    ((33, false, INV), &[Arg(0, 29)]),
    ((34, false, INV), &[Arg(0, 53)]),
    ((35, false, INV), &[Arg(0, 61)]),
    ((37, false, INV), &[Arg(0, 93)]),
    ((38, false, INV), &[Arg(0, 117)]),
    ((39, false, INV), &[Arg(0, 125)]),
    ((470, false, AND2), &[Tv(19), Tv(469)]),
    ((495, false, AND2), &[Tv(486), Tv(494)]),
    ((501, false, AND2), &[Arg(2, 33), Tv(500)]),
    ((504, false, AND2), &[Tv(16), Tv(500)]),
    ((508, false, AND2), &[Tv(486), Tv(507)]),
    ((515, false, AND2), &[Arg(2, 0), Tv(469)]),
    ((528, false, AND2), &[Arg(2, 1), Tv(456)]),
];

static LEVEL_5: [((usize, bool, CellType), &[GateInput]); 153] = [
    ((22, false, INV), &[Arg(2, 21)]),
    ((24, false, INV), &[Arg(0, 149)]),
    ((32, false, INV), &[Arg(0, 21)]),
    ((36, false, INV), &[Arg(0, 85)]),
    ((42, false, NAND2), &[Arg(2, 53), Tv(38)]),
    ((44, false, XNOR2), &[Arg(2, 38), Arg(0, 102)]),
    ((47, false, XNOR2), &[Arg(2, 30), Arg(0, 94)]),
    ((49, false, XNOR2), &[Arg(2, 7), Arg(0, 71)]),
    ((50, false, XNOR2), &[Arg(2, 24), Arg(0, 88)]),
    ((62, false, NAND2), &[Tv(21), Arg(0, 125)]),
    ((63, false, NAND2), &[Arg(2, 61), Tv(39)]),
    ((64, false, XNOR2), &[Arg(2, 32), Arg(0, 96)]),
    ((67, false, XNOR2), &[Arg(2, 35), Arg(0, 99)]),
    ((69, false, XNOR2), &[Arg(2, 23), Arg(0, 87)]),
    ((70, false, XNOR2), &[Arg(2, 45), Arg(0, 109)]),
    ((77, false, NAND2), &[Arg(2, 29), Tv(37)]),
    ((78, false, NAND2), &[Tv(23), Arg(0, 93)]),
    ((79, false, XNOR2), &[Arg(2, 39), Arg(0, 103)]),
    ((80, false, XNOR2), &[Arg(2, 1), Arg(0, 65)]),
    ((83, false, XNOR2), &[Arg(2, 10), Arg(0, 74)]),
    ((84, false, XNOR2), &[Arg(2, 48), Arg(0, 112)]),
    ((85, false, XNOR2), &[Arg(2, 47), Arg(0, 111)]),
    ((86, false, XNOR2), &[Arg(2, 63), Arg(0, 127)]),
    ((87, false, XNOR2), &[Arg(2, 58), Arg(0, 122)]),
    ((90, false, XNOR2), &[Arg(2, 0), Arg(0, 64)]),
    ((91, false, XNOR2), &[Arg(2, 55), Arg(0, 119)]),
    ((94, false, XNOR2), &[Arg(2, 16), Arg(0, 80)]),
    ((95, false, XNOR2), &[Arg(2, 27), Arg(0, 91)]),
    ((98, false, XNOR2), &[Arg(2, 25), Arg(0, 89)]),
    ((99, false, XNOR2), &[Arg(2, 26), Arg(0, 90)]),
    ((100, false, XNOR2), &[Arg(2, 52), Arg(0, 116)]),
    ((105, false, XNOR2), &[Arg(2, 28), Arg(0, 92)]),
    ((114, false, XNOR2), &[Arg(2, 4), Arg(0, 68)]),
    ((117, false, XNOR2), &[Arg(2, 37), Arg(0, 101)]),
    ((157, false, XNOR2), &[Arg(2, 44), Arg(0, 108)]),
    ((160, false, XNOR2), &[Arg(2, 13), Arg(0, 77)]),
    ((175, false, XNOR2), &[Arg(2, 40), Arg(0, 168)]),
    ((178, false, XNOR2), &[Arg(2, 34), Arg(0, 162)]),
    ((179, false, XNOR2), &[Arg(2, 15), Arg(0, 143)]),
    ((180, false, XNOR2), &[Arg(2, 13), Arg(0, 141)]),
    ((181, false, XNOR2), &[Arg(2, 47), Arg(0, 175)]),
    ((182, false, XNOR2), &[Arg(2, 1), Arg(0, 129)]),
    ((185, false, XNOR2), &[Arg(2, 16), Arg(0, 144)]),
    ((187, false, XNOR2), &[Arg(2, 55), Arg(0, 183)]),
    ((188, false, XNOR2), &[Arg(2, 5), Arg(0, 133)]),
    ((189, false, NAND2), &[Tv(23), Arg(0, 157)]),
    ((194, false, XNOR2), &[Arg(2, 41), Arg(0, 169)]),
    ((195, false, XNOR2), &[Arg(2, 25), Arg(0, 153)]),
    ((196, false, XNOR2), &[Arg(2, 32), Arg(0, 160)]),
    ((201, false, XNOR2), &[Arg(2, 38), Arg(0, 166)]),
    ((202, false, XNOR2), &[Arg(2, 7), Arg(0, 135)]),
    ((204, false, XNOR2), &[Arg(2, 10), Arg(0, 138)]),
    ((208, false, NAND2), &[Arg(2, 29), Tv(25)]),
    ((209, false, NAND2), &[Tv(20), Arg(0, 181)]),
    ((211, false, NAND2), &[Arg(2, 53), Tv(26)]),
    ((212, false, NAND2), &[Arg(2, 61), Tv(27)]),
    ((213, false, NAND2), &[Tv(21), Arg(0, 189)]),
    ((215, false, XNOR2), &[Arg(2, 26), Arg(0, 154)]),
    ((217, false, XNOR2), &[Arg(2, 58), Arg(0, 186)]),
    ((218, false, XNOR2), &[Arg(2, 28), Arg(0, 156)]),
    ((220, false, XNOR2), &[Arg(2, 0), Arg(0, 128)]),
    ((222, false, XNOR2), &[Arg(2, 44), Arg(0, 172)]),
    ((225, false, XNOR2), &[Arg(2, 35), Arg(0, 163)]),
    ((228, false, XNOR2), &[Arg(2, 39), Arg(0, 167)]),
    ((229, false, XNOR2), &[Arg(2, 48), Arg(0, 176)]),
    ((235, false, XNOR2), &[Arg(2, 52), Arg(0, 180)]),
    ((254, false, XNOR2), &[Arg(2, 23), Arg(0, 151)]),
    ((257, false, XNOR2), &[Arg(2, 24), Arg(0, 152)]),
    ((280, false, XNOR2), &[Arg(2, 63), Arg(0, 191)]),
    ((283, false, XNOR2), &[Arg(2, 45), Arg(0, 173)]),
    ((288, false, XNOR2), &[Arg(2, 4), Arg(0, 132)]),
    ((291, false, XNOR2), &[Arg(2, 37), Arg(0, 165)]),
    ((308, false, XNOR2), &[Arg(2, 44), Arg(0, 236)]),
    ((309, false, XNOR2), &[Arg(2, 37), Arg(0, 229)]),
    ((311, false, NAND2), &[Arg(2, 53), Tv(30)]),
    ((312, false, NAND2), &[Tv(23), Arg(0, 221)]),
    ((313, false, NAND2), &[Arg(2, 21), Tv(28)]),
    ((314, false, NAND2), &[Arg(2, 29), Tv(29)]),
    ((316, false, XNOR2), &[Arg(2, 36), Arg(0, 228)]),
    ((318, false, NAND2), &[Tv(20), Arg(0, 245)]),
    ((324, false, XNOR2), &[Arg(2, 43), Arg(0, 235)]),
    ((326, false, XNOR2), &[Arg(2, 10), Arg(0, 202)]),
    ((328, false, NAND2), &[Tv(21), Arg(0, 253)]),
    ((329, false, NAND2), &[Arg(2, 61), Tv(31)]),
    ((330, false, XNOR2), &[Arg(2, 26), Arg(0, 218)]),
    ((331, false, XNOR2), &[Arg(2, 60), Arg(0, 252)]),
    ((333, false, XNOR2), &[Arg(2, 46), Arg(0, 238)]),
    ((337, false, XNOR2), &[Arg(2, 25), Arg(0, 217)]),
    ((339, false, XNOR2), &[Arg(2, 0), Arg(0, 192)]),
    ((344, false, XNOR2), &[Arg(2, 1), Arg(0, 193)]),
    ((345, false, XNOR2), &[Arg(2, 4), Arg(0, 196)]),
    ((346, false, XNOR2), &[Arg(2, 47), Arg(0, 239)]),
    ((347, false, XNOR2), &[Arg(2, 40), Arg(0, 232)]),
    ((348, false, XNOR2), &[Arg(2, 15), Arg(0, 207)]),
    ((349, false, XNOR2), &[Arg(2, 45), Arg(0, 237)]),
    ((350, false, XNOR2), &[Arg(2, 48), Arg(0, 240)]),
    ((351, false, XNOR2), &[Arg(2, 13), Arg(0, 205)]),
    ((352, false, XNOR2), &[Arg(2, 24), Arg(0, 216)]),
    ((353, false, XNOR2), &[Arg(2, 16), Arg(0, 208)]),
    ((354, false, XNOR2), &[Arg(2, 31), Arg(0, 223)]),
    ((355, false, XNOR2), &[Arg(2, 55), Arg(0, 247)]),
    ((356, false, XNOR2), &[Arg(2, 32), Arg(0, 224)]),
    ((357, false, XNOR2), &[Arg(2, 63), Arg(0, 255)]),
    ((358, false, XNOR2), &[Arg(2, 39), Arg(0, 231)]),
    ((364, false, XNOR2), &[Arg(2, 23), Arg(0, 215)]),
    ((365, false, XNOR2), &[Arg(2, 28), Arg(0, 220)]),
    ((366, false, XNOR2), &[Arg(2, 52), Arg(0, 244)]),
    ((367, false, XNOR2), &[Arg(2, 38), Arg(0, 230)]),
    ((368, false, XNOR2), &[Arg(2, 58), Arg(0, 250)]),
    ((385, false, XNOR2), &[Arg(2, 35), Arg(0, 227)]),
    ((389, false, XNOR2), &[Arg(2, 7), Arg(0, 199)]),
    ((408, false, XNOR2), &[Arg(2, 34), Arg(0, 226)]),
    ((410, false, XNOR2), &[Arg(2, 41), Arg(0, 233)]),
    ((413, false, XNOR2), &[Arg(2, 5), Arg(0, 197)]),
    ((471, false, AND2), &[Tv(18), Tv(470)]),
    ((505, false, AND2), &[Tv(495), Tv(504)]),
    ((509, false, AND2), &[Tv(501), Tv(508)]),
    ((514, false, AND2), &[Tv(504), Tv(508)]),
    ((516, false, AND2), &[Tv(18), Tv(515)]),
    ((529, false, AND2), &[Tv(470), Tv(528)]),
    ((539, false, AND2), &[Arg(1, 7), Tv(456)]),
    ((552, false, NAND2), &[Tv(21), Arg(0, 61)]),
    ((553, false, NAND2), &[Arg(2, 61), Tv(35)]),
    ((555, false, XNOR2), &[Arg(2, 13), Arg(0, 13)]),
    ((556, false, XNOR2), &[Arg(2, 48), Arg(0, 48)]),
    ((557, false, XNOR2), &[Arg(2, 47), Arg(0, 47)]),
    ((564, false, XNOR2), &[Arg(2, 10), Arg(0, 10)]),
    ((565, false, NAND2), &[Tv(23), Arg(0, 29)]),
    ((567, false, XNOR2), &[Arg(2, 32), Arg(0, 32)]),
    ((569, false, XNOR2), &[Arg(2, 28), Arg(0, 28)]),
    ((573, false, XNOR2), &[Arg(2, 23), Arg(0, 23)]),
    ((574, false, XNOR2), &[Arg(2, 35), Arg(0, 35)]),
    ((575, false, NAND2), &[Arg(2, 29), Tv(33)]),
    ((576, false, XNOR2), &[Arg(2, 39), Arg(0, 39)]),
    ((578, false, XNOR2), &[Arg(2, 0), Arg(0, 0)]),
    ((580, false, XNOR2), &[Arg(2, 30), Arg(0, 30)]),
    ((582, false, XNOR2), &[Arg(2, 16), Arg(0, 16)]),
    ((584, false, XNOR2), &[Arg(2, 58), Arg(0, 58)]),
    ((588, false, XNOR2), &[Arg(2, 38), Arg(0, 38)]),
    ((590, false, XNOR2), &[Arg(2, 26), Arg(0, 26)]),
    ((592, false, XNOR2), &[Arg(2, 7), Arg(0, 7)]),
    ((593, false, NAND2), &[Arg(2, 53), Tv(34)]),
    ((596, false, XNOR2), &[Arg(2, 25), Arg(0, 25)]),
    ((597, false, XNOR2), &[Arg(2, 1), Arg(0, 1)]),
    ((600, false, XNOR2), &[Arg(2, 55), Arg(0, 55)]),
    ((604, false, XNOR2), &[Arg(2, 24), Arg(0, 24)]),
    ((605, false, XNOR2), &[Arg(2, 27), Arg(0, 27)]),
    ((613, false, XNOR2), &[Arg(2, 52), Arg(0, 52)]),
    ((619, false, XNOR2), &[Arg(2, 63), Arg(0, 63)]),
    ((622, false, XNOR2), &[Arg(2, 45), Arg(0, 45)]),
    ((627, false, XNOR2), &[Arg(2, 4), Arg(0, 4)]),
    ((630, false, XNOR2), &[Arg(2, 37), Arg(0, 37)]),
    ((0, false, XNOR2), &[Arg(2, 44), Arg(0, 44)]),
];

static LEVEL_6: [((usize, bool, CellType), &[GateInput]); 166] = [
    ((40, false, XNOR2), &[Arg(2, 36), Arg(0, 100)]),
    ((41, false, NAND2), &[Arg(2, 21), Tv(36)]),
    ((43, false, XNOR2), &[Arg(2, 60), Arg(0, 124)]),
    ((45, false, XNOR2), &[Arg(2, 14), Arg(0, 78)]),
    ((46, false, XNOR2), &[Arg(2, 40), Arg(0, 104)]),
    ((48, false, NAND2), &[Tv(20), Arg(0, 117)]),
    ((51, false, XNOR2), &[Arg(2, 33), Arg(0, 97)]),
    ((53, false, XNOR2), &[Arg(2, 22), Arg(0, 86)]),
    ((56, false, XNOR2), &[Arg(2, 59), Arg(0, 123)]),
    ((58, false, XNOR2), &[Arg(2, 15), Arg(0, 79)]),
    ((59, false, XNOR2), &[Arg(2, 46), Arg(0, 110)]),
    ((60, false, XNOR2), &[Arg(2, 18), Arg(0, 82)]),
    ((65, false, XNOR2), &[Arg(2, 56), Arg(0, 120)]),
    ((66, false, XNOR2), &[Arg(2, 43), Arg(0, 107)]),
    ((73, false, XNOR2), &[Arg(2, 19), Arg(0, 83)]),
    ((75, false, XNOR2), &[Arg(2, 34), Arg(0, 98)]),
    ((76, false, XNOR2), &[Arg(2, 5), Arg(0, 69)]),
    ((81, false, XNOR2), &[Arg(2, 57), Arg(0, 121)]),
    ((82, false, XNOR2), &[Arg(2, 51), Arg(0, 115)]),
    ((88, false, XNOR2), &[Arg(2, 62), Arg(0, 126)]),
    ((89, false, XNOR2), &[Arg(2, 50), Arg(0, 114)]),
    ((92, false, XNOR2), &[Arg(2, 41), Arg(0, 105)]),
    ((102, false, XNOR2), &[Arg(2, 11), Arg(0, 75)]),
    ((108, false, AND2), &[Tv(42), Tv(86)]),
    ((110, false, AND2), &[Tv(70), Tv(79)]),
    ((113, false, AND2), &[Tv(84), Tv(87)]),
    ((115, false, AND2), &[Tv(105), Tv(114)]),
    ((118, false, AND2), &[Tv(85), Tv(117)]),
    ((128, false, AND2), &[Tv(62), Tv(64)]),
    ((130, false, AND2), &[Tv(63), Tv(91)]),
    ((133, false, AND2), &[Tv(78), Tv(90)]),
    ((134, false, AND2), &[Tv(80), Tv(83)]),
    ((152, false, XNOR2), &[Arg(2, 31), Arg(0, 95)]),
    ((156, false, AND2), &[Tv(44), Tv(67)]),
    ((158, false, AND2), &[Tv(100), Tv(157)]),
    ((161, false, AND2), &[Tv(49), Tv(160)]),
    ((162, false, AND2), &[Tv(47), Tv(95)]),
    ((165, false, AND2), &[Tv(69), Tv(77)]),
    ((167, false, AND2), &[Tv(50), Tv(98)]),
    ((168, false, AND2), &[Tv(94), Tv(99)]),
    ((176, false, NAND2), &[Tv(22), Arg(0, 149)]),
    ((177, false, XNOR2), &[Arg(2, 2), Arg(0, 130)]),
    ((183, false, XNOR2), &[Arg(2, 31), Arg(0, 159)]),
    ((191, false, XNOR2), &[Arg(2, 51), Arg(0, 179)]),
    ((192, false, XNOR2), &[Arg(2, 18), Arg(0, 146)]),
    ((197, false, XNOR2), &[Arg(2, 62), Arg(0, 190)]),
    ((198, false, XNOR2), &[Arg(2, 9), Arg(0, 137)]),
    ((199, false, XNOR2), &[Arg(2, 50), Arg(0, 178)]),
    ((200, false, XNOR2), &[Arg(2, 14), Arg(0, 142)]),
    ((203, false, XNOR2), &[Arg(2, 33), Arg(0, 161)]),
    ((207, false, XNOR2), &[Arg(2, 22), Arg(0, 150)]),
    ((210, false, XNOR2), &[Arg(2, 3), Arg(0, 131)]),
    ((214, false, NAND2), &[Arg(2, 21), Tv(24)]),
    ((219, false, XNOR2), &[Arg(2, 11), Arg(0, 139)]),
    ((223, false, AND2), &[Tv(179), Tv(188)]),
    ((224, false, XNOR2), &[Arg(2, 12), Arg(0, 140)]),
    ((226, false, XNOR2), &[Arg(2, 8), Arg(0, 136)]),
    ((227, false, AND2), &[Tv(175), Tv(194)]),
    ((233, false, XNOR2), &[Arg(2, 6), Arg(0, 134)]),
    ((234, false, XNOR2), &[Arg(2, 20), Arg(0, 148)]),
    ((236, false, XNOR2), &[Arg(2, 59), Arg(0, 187)]),
    ((237, false, XNOR2), &[Arg(2, 30), Arg(0, 158)]),
    ((242, false, AND2), &[Tv(189), Tv(220)]),
    ((243, false, AND2), &[Tv(182), Tv(204)]),
    ((255, false, AND2), &[Tv(208), Tv(254)]),
    ((258, false, AND2), &[Tv(195), Tv(257)]),
    ((259, false, AND2), &[Tv(185), Tv(215)]),
    ((272, false, AND2), &[Tv(201), Tv(225)]),
    ((273, false, AND2), &[Tv(222), Tv(235)]),
    ((275, false, AND2), &[Tv(180), Tv(202)]),
    ((281, false, AND2), &[Tv(211), Tv(280)]),
    ((284, false, AND2), &[Tv(228), Tv(283)]),
    ((287, false, AND2), &[Tv(217), Tv(229)]),
    ((289, false, AND2), &[Tv(218), Tv(288)]),
    ((292, false, AND2), &[Tv(181), Tv(291)]),
    ((296, false, AND2), &[Tv(178), Tv(209)]),
    ((300, false, AND2), &[Tv(196), Tv(213)]),
    ((302, false, AND2), &[Tv(187), Tv(212)]),
    ((315, false, XNOR2), &[Arg(2, 14), Arg(0, 206)]),
    ((317, false, XNOR2), &[Arg(2, 59), Arg(0, 251)]),
    ((320, false, XNOR2), &[Arg(2, 6), Arg(0, 198)]),
    ((321, false, XNOR2), &[Arg(2, 30), Arg(0, 222)]),
    ((322, false, XNOR2), &[Arg(2, 62), Arg(0, 254)]),
    ((323, false, XNOR2), &[Arg(2, 20), Arg(0, 212)]),
    ((332, false, XNOR2), &[Arg(2, 17), Arg(0, 209)]),
    ((334, false, XNOR2), &[Arg(2, 51), Arg(0, 243)]),
    ((335, false, XNOR2), &[Arg(2, 22), Arg(0, 214)]),
    ((336, false, XNOR2), &[Arg(2, 33), Arg(0, 225)]),
    ((338, false, XNOR2), &[Arg(2, 11), Arg(0, 203)]),
    ((340, false, XNOR2), &[Arg(2, 12), Arg(0, 204)]),
    ((363, false, XNOR2), &[Arg(2, 18), Arg(0, 210)]),
    ((375, false, AND2), &[Tv(312), Tv(339)]),
    ((376, false, AND2), &[Tv(326), Tv(344)]),
    ((381, false, XNOR2), &[Arg(2, 3), Arg(0, 195)]),
    ((386, false, AND2), &[Tv(367), Tv(385)]),
    ((387, false, AND2), &[Tv(308), Tv(366)]),
    ((390, false, AND2), &[Tv(351), Tv(389)]),
    ((396, false, AND2), &[Tv(311), Tv(357)]),
    ((398, false, AND2), &[Tv(349), Tv(358)]),
    ((401, false, AND2), &[Tv(350), Tv(368)]),
    ((402, false, AND2), &[Tv(345), Tv(365)]),
    ((404, false, AND2), &[Tv(309), Tv(346)]),
    ((409, false, AND2), &[Tv(318), Tv(408)]),
    ((411, false, AND2), &[Tv(347), Tv(410)]),
    ((414, false, AND2), &[Tv(348), Tv(413)]),
    ((417, false, AND2), &[Tv(328), Tv(356)]),
    ((419, false, AND2), &[Tv(329), Tv(355)]),
    ((420, false, XNOR2), &[Arg(2, 50), Arg(0, 242)]),
    ((427, false, AND2), &[Tv(324), Tv(333)]),
    ((428, false, AND2), &[Tv(316), Tv(331)]),
    ((430, false, AND2), &[Tv(313), Tv(354)]),
    ((433, false, AND2), &[Tv(314), Tv(364)]),
    ((435, false, AND2), &[Tv(337), Tv(352)]),
    ((436, false, AND2), &[Tv(330), Tv(353)]),
    ((502, false, AND2), &[Tv(495), Tv(501)]),
    ((506, false, NAND2), &[Arg(1, 1), Tv(505)]),
    ((510, false, NAND2), &[Arg(1, 2), Tv(509)]),
    ((517, false, NAND2), &[Arg(1, 4), Tv(516)]),
    ((518, false, NAND2), &[Arg(1, 0), Tv(471)]),
    ((521, false, NAND2), &[Arg(1, 5), Tv(505)]),
    ((522, false, NAND2), &[Arg(1, 6), Tv(509)]),
    ((536, false, AND2), &[Tv(515), Tv(528)]),
    ((538, false, NAND2), &[Arg(1, 11), Tv(529)]),
    ((540, false, NAND2), &[Tv(516), Tv(539)]),
    ((545, false, NAND2), &[Arg(1, 13), Tv(505)]),
    ((546, false, NAND2), &[Arg(1, 12), Tv(514)]),
    ((554, false, XNOR2), &[Arg(2, 34), Arg(0, 34)]),
    ((558, false, XNOR2), &[Arg(2, 33), Arg(0, 33)]),
    ((560, false, XNOR2), &[Arg(2, 54), Arg(0, 54)]),
    ((561, false, XNOR2), &[Arg(2, 22), Arg(0, 22)]),
    ((562, false, XNOR2), &[Arg(2, 57), Arg(0, 57)]),
    ((563, false, NAND2), &[Tv(20), Arg(0, 53)]),
    ((568, false, XNOR2), &[Arg(2, 56), Arg(0, 56)]),
    ((571, false, NAND2), &[Arg(2, 21), Tv(32)]),
    ((572, false, XNOR2), &[Arg(2, 19), Arg(0, 19)]),
    ((581, false, XNOR2), &[Arg(2, 40), Arg(0, 40)]),
    ((583, false, XNOR2), &[Arg(2, 62), Arg(0, 62)]),
    ((585, false, XNOR2), &[Arg(2, 46), Arg(0, 46)]),
    ((587, false, XNOR2), &[Arg(2, 59), Arg(0, 59)]),
    ((589, false, XNOR2), &[Arg(2, 14), Arg(0, 14)]),
    ((594, false, XNOR2), &[Arg(2, 50), Arg(0, 50)]),
    ((595, false, XNOR2), &[Arg(2, 43), Arg(0, 43)]),
    ((602, false, XNOR2), &[Arg(2, 41), Arg(0, 41)]),
    ((607, false, XNOR2), &[Arg(2, 36), Arg(0, 36)]),
    ((608, false, XNOR2), &[Arg(2, 5), Arg(0, 5)]),
    ((609, false, XNOR2), &[Arg(2, 15), Arg(0, 15)]),
    ((611, false, XNOR2), &[Arg(2, 18), Arg(0, 18)]),
    ((612, false, XNOR2), &[Arg(2, 60), Arg(0, 60)]),
    ((614, false, XNOR2), &[Arg(2, 11), Arg(0, 11)]),
    ((620, false, AND2), &[Tv(593), Tv(619)]),
    ((623, false, AND2), &[Tv(576), Tv(622)]),
    ((626, false, AND2), &[Tv(556), Tv(584)]),
    ((628, false, AND2), &[Tv(569), Tv(627)]),
    ((631, false, AND2), &[Tv(557), Tv(630)]),
    ((641, false, AND2), &[Tv(552), Tv(567)]),
    ((643, false, AND2), &[Tv(553), Tv(600)]),
    ((646, false, AND2), &[Tv(565), Tv(578)]),
    ((647, false, AND2), &[Tv(564), Tv(597)]),
    ((665, false, XNOR2), &[Arg(2, 31), Arg(0, 31)]),
    ((669, false, AND2), &[Tv(574), Tv(588)]),
    ((1, false, AND2), &[Tv(613), Tv(0)]),
    ((3, false, AND2), &[Tv(555), Tv(592)]),
    ((4, false, AND2), &[Tv(580), Tv(605)]),
    ((7, false, AND2), &[Tv(573), Tv(575)]),
    ((9, false, AND2), &[Tv(596), Tv(604)]),
    ((10, false, AND2), &[Tv(582), Tv(590)]),
];

static LEVEL_7: [((usize, bool, CellType), &[GateInput]); 132] = [
    ((52, false, XNOR2), &[Arg(2, 6), Arg(0, 70)]),
    ((54, false, XNOR2), &[Arg(2, 20), Arg(0, 84)]),
    ((55, false, XNOR2), &[Arg(2, 42), Arg(0, 106)]),
    ((57, false, XNOR2), &[Arg(2, 54), Arg(0, 118)]),
    ((61, false, XNOR2), &[Arg(2, 2), Arg(0, 66)]),
    ((68, false, XNOR2), &[Arg(2, 17), Arg(0, 81)]),
    ((71, false, XNOR2), &[Arg(2, 12), Arg(0, 76)]),
    ((72, false, NAND2), &[Tv(22), Arg(0, 85)]),
    ((74, false, XNOR2), &[Arg(2, 8), Arg(0, 72)]),
    ((93, false, AND2), &[Tv(46), Tv(92)]),
    ((96, false, AND2), &[Tv(58), Tv(76)]),
    ((97, false, XNOR2), &[Arg(2, 9), Arg(0, 73)]),
    ((101, false, XNOR2), &[Arg(2, 49), Arg(0, 113)]),
    ((103, false, AND2), &[Tv(45), Tv(102)]),
    ((109, false, AND2), &[Tv(88), Tv(108)]),
    ((111, false, AND2), &[Tv(56), Tv(110)]),
    ((116, false, AND2), &[Tv(113), Tv(115)]),
    ((119, false, AND2), &[Tv(82), Tv(118)]),
    ((123, false, AND2), &[Tv(48), Tv(75)]),
    ((125, false, AND2), &[Tv(53), Tv(73)]),
    ((129, false, AND2), &[Tv(51), Tv(128)]),
    ((131, false, AND2), &[Tv(89), Tv(130)]),
    ((135, false, AND2), &[Tv(133), Tv(134)]),
    ((136, false, AND2), &[Tv(65), Tv(81)]),
    ((141, false, XNOR2), &[Arg(2, 3), Arg(0, 67)]),
    ((149, false, AND2), &[Tv(59), Tv(66)]),
    ((150, false, AND2), &[Tv(40), Tv(43)]),
    ((153, false, AND2), &[Tv(41), Tv(152)]),
    ((159, false, AND2), &[Tv(156), Tv(158)]),
    ((163, false, AND2), &[Tv(161), Tv(162)]),
    ((166, false, AND2), &[Tv(60), Tv(165)]),
    ((169, false, AND2), &[Tv(167), Tv(168)]),
    ((174, false, XNOR2), &[Arg(2, 46), Arg(0, 174)]),
    ((184, false, XNOR2), &[Arg(2, 19), Arg(0, 147)]),
    ((186, false, XNOR2), &[Arg(2, 49), Arg(0, 177)]),
    ((190, false, XNOR2), &[Arg(2, 60), Arg(0, 188)]),
    ((193, false, XNOR2), &[Arg(2, 42), Arg(0, 170)]),
    ((206, false, XNOR2), &[Arg(2, 56), Arg(0, 184)]),
    ((216, false, XNOR2), &[Arg(2, 17), Arg(0, 145)]),
    ((221, false, XNOR2), &[Arg(2, 36), Arg(0, 164)]),
    ((230, false, XNOR2), &[Arg(2, 54), Arg(0, 182)]),
    ((232, false, XNOR2), &[Arg(2, 57), Arg(0, 185)]),
    ((238, false, AND2), &[Tv(200), Tv(219)]),
    ((244, false, AND2), &[Tv(242), Tv(243)]),
    ((248, false, XNOR2), &[Arg(2, 43), Arg(0, 171)]),
    ((252, false, AND2), &[Tv(183), Tv(214)]),
    ((256, false, AND2), &[Tv(192), Tv(255)]),
    ((260, false, AND2), &[Tv(258), Tv(259)]),
    ((265, false, AND2), &[Tv(176), Tv(177)]),
    ((266, false, AND2), &[Tv(198), Tv(226)]),
    ((269, false, AND2), &[Tv(210), Tv(233)]),
    ((270, false, AND2), &[Tv(224), Tv(234)]),
    ((274, false, AND2), &[Tv(272), Tv(273)]),
    ((276, false, AND2), &[Tv(237), Tv(275)]),
    ((282, false, AND2), &[Tv(197), Tv(281)]),
    ((285, false, AND2), &[Tv(236), Tv(284)]),
    ((290, false, AND2), &[Tv(287), Tv(289)]),
    ((293, false, AND2), &[Tv(191), Tv(292)]),
    ((297, false, AND2), &[Tv(227), Tv(296)]),
    ((298, false, AND2), &[Tv(207), Tv(223)]),
    ((301, false, AND2), &[Tv(203), Tv(300)]),
    ((303, false, AND2), &[Tv(199), Tv(302)]),
    ((310, false, NAND2), &[Tv(22), Arg(0, 213)]),
    ((319, false, XNOR2), &[Arg(2, 57), Arg(0, 249)]),
    ((325, false, XNOR2), &[Arg(2, 56), Arg(0, 248)]),
    ((327, false, XNOR2), &[Arg(2, 42), Arg(0, 234)]),
    ((341, false, XNOR2), &[Arg(2, 49), Arg(0, 241)]),
    ((343, false, XNOR2), &[Arg(2, 19), Arg(0, 211)]),
    ((359, false, XNOR2), &[Arg(2, 8), Arg(0, 200)]),
    ((360, false, XNOR2), &[Arg(2, 9), Arg(0, 201)]),
    ((362, false, XNOR2), &[Arg(2, 2), Arg(0, 194)]),
    ((369, false, XNOR2), &[Arg(2, 54), Arg(0, 246)]),
    ((371, false, AND2), &[Tv(315), Tv(338)]),
    ((377, false, AND2), &[Tv(375), Tv(376)]),
    ((382, false, AND2), &[Tv(320), Tv(381)]),
    ((383, false, AND2), &[Tv(323), Tv(340)]),
    ((388, false, AND2), &[Tv(386), Tv(387)]),
    ((391, false, AND2), &[Tv(321), Tv(390)]),
    ((397, false, AND2), &[Tv(322), Tv(396)]),
    ((399, false, AND2), &[Tv(317), Tv(398)]),
    ((403, false, AND2), &[Tv(401), Tv(402)]),
    ((405, false, AND2), &[Tv(334), Tv(404)]),
    ((412, false, AND2), &[Tv(409), Tv(411)]),
    ((415, false, AND2), &[Tv(335), Tv(414)]),
    ((418, false, AND2), &[Tv(336), Tv(417)]),
    ((421, false, AND2), &[Tv(419), Tv(420)]),
    ((429, false, AND2), &[Tv(427), Tv(428)]),
    ((431, false, AND2), &[Tv(332), Tv(430)]),
    ((434, false, AND2), &[Tv(363), Tv(433)]),
    ((437, false, AND2), &[Tv(435), Tv(436)]),
    ((503, false, NAND2), &[Arg(1, 3), Tv(502)]),
    ((511, false, AND2), &[Tv(506), Tv(510)]),
    ((519, false, NAND2), &[Tv(517), Tv(518)]),
    ((523, false, NAND2), &[Tv(521), Tv(522)]),
    ((531, false, NAND2), &[Arg(1, 8), Tv(514)]),
    ((532, false, NAND2), &[Arg(1, 10), Tv(509)]),
    ((537, false, NAND2), &[Arg(1, 15), Tv(536)]),
    ((541, false, AND2), &[Tv(538), Tv(540)]),
    ((544, false, NAND2), &[Arg(1, 14), Tv(509)]),
    ((547, false, AND2), &[Tv(545), Tv(546)]),
    ((559, false, XNOR2), &[Arg(2, 20), Arg(0, 20)]),
    ((566, false, XNOR2), &[Arg(2, 2), Arg(0, 2)]),
    ((570, false, NAND2), &[Tv(22), Arg(0, 21)]),
    ((577, false, XNOR2), &[Arg(2, 49), Arg(0, 49)]),
    ((579, false, XNOR2), &[Arg(2, 9), Arg(0, 9)]),
    ((586, false, XNOR2), &[Arg(2, 17), Arg(0, 17)]),
    ((591, false, XNOR2), &[Arg(2, 51), Arg(0, 51)]),
    ((598, false, XNOR2), &[Arg(2, 6), Arg(0, 6)]),
    ((599, false, XNOR2), &[Arg(2, 42), Arg(0, 42)]),
    ((601, false, XNOR2), &[Arg(2, 12), Arg(0, 12)]),
    ((603, false, AND2), &[Tv(581), Tv(602)]),
    ((606, false, XNOR2), &[Arg(2, 8), Arg(0, 8)]),
    ((610, false, AND2), &[Tv(608), Tv(609)]),
    ((615, false, AND2), &[Tv(589), Tv(614)]),
    ((621, false, AND2), &[Tv(583), Tv(620)]),
    ((624, false, AND2), &[Tv(587), Tv(623)]),
    ((629, false, AND2), &[Tv(626), Tv(628)]),
    ((632, false, AND2), &[Tv(560), Tv(631)]),
    ((636, false, AND2), &[Tv(554), Tv(563)]),
    ((638, false, AND2), &[Tv(561), Tv(572)]),
    ((642, false, AND2), &[Tv(558), Tv(641)]),
    ((644, false, AND2), &[Tv(594), Tv(643)]),
    ((648, false, AND2), &[Tv(646), Tv(647)]),
    ((649, false, AND2), &[Tv(562), Tv(568)]),
    ((654, false, XNOR2), &[Arg(2, 3), Arg(0, 3)]),
    ((662, false, AND2), &[Tv(585), Tv(595)]),
    ((663, false, AND2), &[Tv(607), Tv(612)]),
    ((666, false, AND2), &[Tv(571), Tv(665)]),
    ((2, false, AND2), &[Tv(669), Tv(1)]),
    ((5, false, AND2), &[Tv(3), Tv(4)]),
    ((8, false, AND2), &[Tv(611), Tv(7)]),
    ((11, false, AND2), &[Tv(9), Tv(10)]),
];

static LEVEL_8: [((usize, bool, CellType), &[GateInput]); 69] = [
    ((104, false, AND2), &[Tv(101), Tv(103)]),
    ((106, false, AND2), &[Tv(55), Tv(57)]),
    ((112, false, AND2), &[Tv(109), Tv(111)]),
    ((120, false, AND2), &[Tv(116), Tv(119)]),
    ((124, false, AND2), &[Tv(93), Tv(123)]),
    ((126, false, AND2), &[Tv(96), Tv(125)]),
    ((132, false, AND2), &[Tv(129), Tv(131)]),
    ((137, false, AND2), &[Tv(135), Tv(136)]),
    ((142, false, AND2), &[Tv(52), Tv(141)]),
    ((143, false, AND2), &[Tv(54), Tv(71)]),
    ((145, false, AND2), &[Tv(61), Tv(72)]),
    ((146, false, AND2), &[Tv(74), Tv(97)]),
    ((151, false, AND2), &[Tv(149), Tv(150)]),
    ((154, false, AND2), &[Tv(68), Tv(153)]),
    ((164, false, AND2), &[Tv(159), Tv(163)]),
    ((170, false, AND2), &[Tv(166), Tv(169)]),
    ((205, false, XNOR2), &[Arg(2, 27), Arg(0, 155)]),
    ((231, false, AND2), &[Tv(193), Tv(230)]),
    ((239, false, AND2), &[Tv(186), Tv(238)]),
    ((241, false, AND2), &[Tv(206), Tv(232)]),
    ((245, false, AND2), &[Tv(184), Tv(244)]),
    ((249, false, AND2), &[Tv(174), Tv(248)]),
    ((250, false, AND2), &[Tv(190), Tv(221)]),
    ((253, false, AND2), &[Tv(216), Tv(252)]),
    ((261, false, AND2), &[Tv(256), Tv(260)]),
    ((267, false, AND2), &[Tv(265), Tv(266)]),
    ((271, false, AND2), &[Tv(269), Tv(270)]),
    ((277, false, AND2), &[Tv(274), Tv(276)]),
    ((286, false, AND2), &[Tv(282), Tv(285)]),
    ((294, false, AND2), &[Tv(290), Tv(293)]),
    ((299, false, AND2), &[Tv(297), Tv(298)]),
    ((304, false, AND2), &[Tv(301), Tv(303)]),
    ((361, false, AND2), &[Tv(359), Tv(360)]),
    ((370, false, AND2), &[Tv(327), Tv(369)]),
    ((372, false, AND2), &[Tv(341), Tv(371)]),
    ((374, false, AND2), &[Tv(319), Tv(325)]),
    ((378, false, AND2), &[Tv(343), Tv(377)]),
    ((384, false, AND2), &[Tv(382), Tv(383)]),
    ((392, false, AND2), &[Tv(388), Tv(391)]),
    ((400, false, AND2), &[Tv(397), Tv(399)]),
    ((406, false, AND2), &[Tv(403), Tv(405)]),
    ((416, false, AND2), &[Tv(412), Tv(415)]),
    ((422, false, AND2), &[Tv(418), Tv(421)]),
    ((425, false, AND2), &[Tv(310), Tv(362)]),
    ((432, false, AND2), &[Tv(429), Tv(431)]),
    ((438, false, AND2), &[Tv(434), Tv(437)]),
    ((512, false, NAND2), &[Tv(503), Tv(511)]),
    ((520, false, NAND2), &[Tv(514), Tv(519)]),
    ((524, false, NAND2), &[Tv(516), Tv(523)]),
    ((530, false, NAND2), &[Arg(1, 9), Tv(505)]),
    ((533, false, AND2), &[Tv(531), Tv(532)]),
    ((542, false, NAND2), &[Tv(537), Tv(541)]),
    ((548, false, NAND2), &[Tv(544), Tv(547)]),
    ((616, false, AND2), &[Tv(577), Tv(615)]),
    ((617, false, AND2), &[Tv(591), Tv(599)]),
    ((625, false, AND2), &[Tv(621), Tv(624)]),
    ((633, false, AND2), &[Tv(629), Tv(632)]),
    ((637, false, AND2), &[Tv(603), Tv(636)]),
    ((639, false, AND2), &[Tv(610), Tv(638)]),
    ((645, false, AND2), &[Tv(642), Tv(644)]),
    ((650, false, AND2), &[Tv(648), Tv(649)]),
    ((655, false, AND2), &[Tv(598), Tv(654)]),
    ((656, false, AND2), &[Tv(559), Tv(601)]),
    ((658, false, AND2), &[Tv(566), Tv(570)]),
    ((659, false, AND2), &[Tv(579), Tv(606)]),
    ((664, false, AND2), &[Tv(662), Tv(663)]),
    ((667, false, AND2), &[Tv(586), Tv(666)]),
    ((6, false, AND2), &[Tv(2), Tv(5)]),
    ((12, false, AND2), &[Tv(8), Tv(11)]),
];

static LEVEL_9: [((usize, bool, CellType), &[GateInput]); 37] = [
    ((107, false, AND2), &[Tv(104), Tv(106)]),
    ((121, false, AND2), &[Tv(112), Tv(120)]),
    ((127, false, AND2), &[Tv(124), Tv(126)]),
    ((138, false, AND2), &[Tv(132), Tv(137)]),
    ((144, false, AND2), &[Tv(142), Tv(143)]),
    ((147, false, AND2), &[Tv(145), Tv(146)]),
    ((155, false, AND2), &[Tv(151), Tv(154)]),
    ((171, false, AND2), &[Tv(164), Tv(170)]),
    ((240, false, AND2), &[Tv(231), Tv(239)]),
    ((246, false, AND2), &[Tv(241), Tv(245)]),
    ((251, false, AND2), &[Tv(249), Tv(250)]),
    ((262, false, AND2), &[Tv(253), Tv(261)]),
    ((268, false, AND2), &[Tv(205), Tv(267)]),
    ((278, false, AND2), &[Tv(271), Tv(277)]),
    ((295, false, AND2), &[Tv(286), Tv(294)]),
    ((305, false, AND2), &[Tv(299), Tv(304)]),
    ((342, false, XNOR2), &[Arg(2, 27), Arg(0, 219)]),
    ((373, false, AND2), &[Tv(370), Tv(372)]),
    ((379, false, AND2), &[Tv(374), Tv(378)]),
    ((393, false, AND2), &[Tv(384), Tv(392)]),
    ((407, false, AND2), &[Tv(400), Tv(406)]),
    ((423, false, AND2), &[Tv(416), Tv(422)]),
    ((426, false, AND2), &[Tv(361), Tv(425)]),
    ((439, false, AND2), &[Tv(432), Tv(438)]),
    ((513, false, NAND2), &[Tv(471), Tv(512)]),
    ((525, false, AND2), &[Tv(520), Tv(524)]),
    ((534, false, NAND2), &[Tv(530), Tv(533)]),
    ((543, false, NAND2), &[Tv(502), Tv(542)]),
    ((549, false, NAND2), &[Tv(536), Tv(548)]),
    ((618, false, AND2), &[Tv(616), Tv(617)]),
    ((634, false, AND2), &[Tv(625), Tv(633)]),
    ((640, false, AND2), &[Tv(637), Tv(639)]),
    ((651, false, AND2), &[Tv(645), Tv(650)]),
    ((657, false, AND2), &[Tv(655), Tv(656)]),
    ((660, false, AND2), &[Tv(658), Tv(659)]),
    ((668, false, AND2), &[Tv(664), Tv(667)]),
    ((13, false, AND2), &[Tv(6), Tv(12)]),
];

static LEVEL_10: [((usize, bool, CellType), &[GateInput]); 19] = [
    ((122, false, AND2), &[Tv(107), Tv(121)]),
    ((139, false, AND2), &[Tv(127), Tv(138)]),
    ((148, false, AND2), &[Tv(144), Tv(147)]),
    ((172, false, AND2), &[Tv(155), Tv(171)]),
    ((247, false, AND2), &[Tv(240), Tv(246)]),
    ((263, false, AND2), &[Tv(251), Tv(262)]),
    ((279, false, AND2), &[Tv(268), Tv(278)]),
    ((306, false, AND2), &[Tv(295), Tv(305)]),
    ((380, false, AND2), &[Tv(373), Tv(379)]),
    ((394, false, AND2), &[Tv(342), Tv(393)]),
    ((424, false, AND2), &[Tv(407), Tv(423)]),
    ((440, false, AND2), &[Tv(426), Tv(439)]),
    ((526, false, NAND2), &[Tv(513), Tv(525)]),
    ((535, false, NAND2), &[Tv(529), Tv(534)]),
    ((550, false, AND2), &[Tv(543), Tv(549)]),
    ((635, false, AND2), &[Tv(618), Tv(634)]),
    ((652, false, AND2), &[Tv(640), Tv(651)]),
    ((661, false, AND2), &[Tv(657), Tv(660)]),
    ((14, false, AND2), &[Tv(668), Tv(13)]),
];

static LEVEL_11: [((usize, bool, CellType), &[GateInput]); 10] = [
    ((140, false, AND2), &[Tv(122), Tv(139)]),
    ((173, false, AND2), &[Tv(148), Tv(172)]),
    ((264, false, AND2), &[Tv(247), Tv(263)]),
    ((307, false, AND2), &[Tv(279), Tv(306)]),
    ((395, false, AND2), &[Tv(380), Tv(394)]),
    ((441, false, AND2), &[Tv(424), Tv(440)]),
    ((527, false, NAND2), &[Tv(456), Tv(526)]),
    ((551, false, AND2), &[Tv(535), Tv(550)]),
    ((653, false, AND2), &[Tv(635), Tv(652)]),
    ((15, false, AND2), &[Tv(661), Tv(14)]),
];

static LEVEL_12: [((usize, bool, CellType), &[GateInput]); 5] = [
    ((1, true, AND2), &[Tv(140), Tv(173)]),
    ((2, true, AND2), &[Tv(264), Tv(307)]),
    ((3, true, AND2), &[Tv(395), Tv(441)]),
    ((4, true, NAND2), &[Tv(527), Tv(551)]),
    ((0, true, AND2), &[Tv(653), Tv(15)]),
];

static PRUNE_3: [usize; 10] = [
  468,
  17,
  478,
  455,
  493,
  448,
  496,
  485,
  499,
  463,
];

static PRUNE_7: [usize; 166] = [
  332,
  614,
  411,
  287,
  433,
  546,
  219,
  626,
  242,
  118,
  321,
  73,
  197,
  558,
  152,
  60,
  387,
  409,
  82,
  161,
  612,
  522,
  646,
  398,
  162,
  568,
  320,
  602,
  275,
  647,
  545,
  669,
  376,
  128,
  4,
  207,
  594,
  583,
  53,
  177,
  628,
  323,
  199,
  75,
  402,
  233,
  436,
  560,
  561,
  76,
  234,
  110,
  595,
  65,
  335,
  414,
  538,
  572,
  200,
  322,
  198,
  401,
  108,
  435,
  51,
  581,
  130,
  40,
  243,
  255,
  334,
  7,
  210,
  289,
  571,
  165,
  41,
  390,
  300,
  176,
  518,
  236,
  315,
  191,
  563,
  22,
  292,
  168,
  608,
  281,
  45,
  203,
  158,
  609,
  237,
  428,
  56,
  631,
  259,
  620,
  338,
  214,
  417,
  665,
  88,
  167,
  43,
  404,
  223,
  302,
  381,
  133,
  9,
  336,
  224,
  506,
  427,
  258,
  540,
  134,
  10,
  89,
  585,
  156,
  562,
  607,
  66,
  517,
  641,
  611,
  81,
  284,
  363,
  521,
  115,
  340,
  92,
  419,
  623,
  420,
  296,
  48,
  375,
  3,
  273,
  589,
  183,
  510,
  59,
  386,
  587,
  46,
  113,
  192,
  643,
  226,
  102,
  272,
  396,
  227,
  509,
  430,
  554,
  58,
  1,
  317,
];

static PRUNE_1: [usize; 26] = [
  490,
  445,
  479,
  466,
  488,
  443,
  482,
  446,
  480,
  457,
  491,
  458,
  473,
  450,
  449,
  460,
  461,
  483,
  472,
  487,
  442,
  453,
  465,
  476,
  475,
  452,
];

static PRUNE_4: [usize; 7] = [
  16,
  500,
  19,
  469,
  507,
  494,
  486,
];

static PRUNE_10: [usize; 38] = [
  513,
  423,
  107,
  342,
  240,
  534,
  549,
  278,
  155,
  640,
  268,
  144,
  121,
  651,
  525,
  660,
  379,
  439,
  529,
  618,
  246,
  426,
  393,
  543,
  13,
  295,
  171,
  668,
  657,
  251,
  127,
  262,
  138,
  634,
  373,
  147,
  305,
  407,
];

static PRUNE_8: [usize; 135] = [
  174,
  298,
  377,
  5,
  129,
  163,
  230,
  636,
  61,
  388,
  343,
  591,
  434,
  310,
  186,
  265,
  141,
  547,
  96,
  648,
  276,
  603,
  150,
  601,
  184,
  511,
  285,
  116,
  319,
  71,
  274,
  72,
  399,
  523,
  421,
  297,
  624,
  252,
  579,
  391,
  301,
  256,
  109,
  403,
  606,
  437,
  516,
  8,
  662,
  290,
  166,
  369,
  119,
  649,
  74,
  570,
  153,
  559,
  232,
  412,
  615,
  537,
  131,
  244,
  266,
  514,
  221,
  503,
  97,
  638,
  52,
  360,
  642,
  270,
  101,
  371,
  123,
  405,
  654,
  248,
  327,
  282,
  586,
  383,
  135,
  11,
  541,
  293,
  169,
  415,
  325,
  629,
  663,
  54,
  505,
  303,
  382,
  55,
  359,
  111,
  190,
  269,
  532,
  566,
  216,
  577,
  2,
  341,
  93,
  544,
  206,
  397,
  149,
  431,
  57,
  260,
  136,
  632,
  418,
  621,
  666,
  519,
  68,
  429,
  598,
  193,
  599,
  644,
  103,
  125,
  531,
  159,
  238,
  362,
  610,
];

static PRUNE_11: [usize; 20] = [
  456,
  535,
  263,
  139,
  635,
  380,
  526,
  279,
  661,
  424,
  394,
  247,
  122,
  652,
  550,
  14,
  172,
  440,
  148,
  306,
];

static PRUNE_5: [usize; 19] = [
  39,
  28,
  26,
  37,
  38,
  27,
  470,
  504,
  30,
  31,
  29,
  18,
  33,
  34,
  21,
  25,
  508,
  23,
  35,
];

static PRUNE_2: [usize; 16] = [
  467,
  477,
  489,
  444,
  481,
  459,
  492,
  447,
  484,
  451,
  462,
  464,
  498,
  454,
  497,
  474,
];

static PRUNE_9: [usize; 72] = [
  625,
  253,
  659,
  512,
  106,
  422,
  637,
  299,
  524,
  400,
  231,
  432,
  533,
  286,
  241,
  151,
  658,
  267,
  143,
  425,
  132,
  154,
  650,
  639,
  392,
  617,
  245,
  277,
  378,
  6,
  502,
  164,
  536,
  120,
  616,
  142,
  548,
  112,
  146,
  372,
  124,
  406,
  361,
  530,
  304,
  370,
  471,
  664,
  416,
  438,
  145,
  205,
  656,
  645,
  239,
  261,
  137,
  667,
  374,
  250,
  126,
  104,
  384,
  12,
  170,
  294,
  542,
  249,
  271,
  520,
  633,
  655,
];

static PRUNE_6: [usize; 151] = [
  580,
  50,
  501,
  208,
  84,
  354,
  309,
  557,
  185,
  95,
  592,
  62,
  389,
  344,
  220,
  175,
  366,
  569,
  355,
  353,
  229,
  556,
  105,
  308,
  590,
  364,
  195,
  567,
  365,
  117,
  613,
  196,
  218,
  94,
  49,
  331,
  83,
  410,
  346,
  222,
  98,
  605,
  515,
  357,
  312,
  188,
  64,
  358,
  313,
  189,
  211,
  87,
  42,
  324,
  356,
  311,
  604,
  254,
  333,
  209,
  85,
  288,
  367,
  86,
  582,
  413,
  368,
  63,
  187,
  593,
  345,
  627,
  67,
  552,
  349,
  597,
  225,
  574,
  495,
  44,
  619,
  326,
  202,
  78,
  157,
  575,
  0,
  79,
  180,
  90,
  291,
  539,
  528,
  201,
  77,
  280,
  573,
  20,
  347,
  99,
  178,
  257,
  584,
  212,
  100,
  630,
  179,
  337,
  213,
  32,
  235,
  314,
  596,
  348,
  329,
  408,
  36,
  160,
  318,
  70,
  194,
  588,
  47,
  622,
  217,
  578,
  330,
  555,
  228,
  352,
  600,
  181,
  339,
  215,
  91,
  316,
  564,
  350,
  553,
  69,
  24,
  351,
  182,
  385,
  328,
  80,
  204,
  576,
  283,
  565,
  114,
];

static PRUNE_12: [usize; 10] = [
  264,
  140,
  15,
  173,
  527,
  653,
  551,
  307,
  395,
  441,
];

fn prune(temp_nodes: &mut HashMap<usize, Ciphertext>, temp_node_ids: &[usize]) {
  for x in temp_node_ids {
    temp_nodes.remove(&x);
  }
}

pub fn get_cell(coords: &Vec<Ciphertext>, eggs: &Vec<Ciphertext>, players: &Vec<Ciphertext>) -> Vec<Ciphertext> {
    let parameter_set = get_active_parameter_set();
    rayon::ThreadPoolBuilder::new()
        .build_scoped(
            |thread| {
                set_parameter_set(parameter_set);
                thread.run()
            },
            |pool| pool.install(|| {

                let args: &[&Vec<Ciphertext>] = &[players, eggs, coords];

                let mut temp_nodes = HashMap::new();
                let mut out = Vec::new();
                out.resize(5, None);

                let mut run_level = |
                temp_nodes: &mut HashMap<usize, Ciphertext>,
                tasks: &[((usize, bool, CellType), &[GateInput])]
                | {
                    let updates = tasks
                        .into_par_iter()
                        .map(|(k, task_args)| {
                            let (id, is_output, celltype) = k;
                            let task_args = task_args.into_iter()
                            .map(|arg| match arg {
                                Cst(false) => todo!(),
                                Cst(true) => todo!(),
                                Arg(pos, ndx) => &args[*pos][*ndx],
                                Tv(ndx) => &temp_nodes[ndx],
                                Output(ndx) => &out[*ndx]
                                            .as_ref()
                                            .expect(&format!("Output node {ndx} not found")),
                            }).collect::<Vec<_>>();

                            let gate_func = |args: &[&Ciphertext]| match celltype {
                                AND2 => args[0] & args[1],
                                NAND2 => args[0].nand(args[1]),
                                OR2 => args[0] | args[1],
                                NOR2 => args[0].nor(args[1]),
                                XOR2 => args[0] ^ args[1],
                                XNOR2 => args[0].xnor(args[1]),
                                INV => !args[0],
                            };
                            
                            ((*id, *is_output), gate_func(&task_args))
                        })
                        .collect::<Vec<_>>();
                    updates.into_iter().for_each(|(k, v)| {
                        let (index, is_output) = k;
                        if is_output {
                            out[index] = Some(v);
                        } else {
                            temp_nodes.insert(index, v);
                        }
                    });
                };

                run_level(&mut temp_nodes, &LEVEL_0);
    run_level(&mut temp_nodes, &LEVEL_1);
    prune(&mut temp_nodes, &PRUNE_1);
    run_level(&mut temp_nodes, &LEVEL_2);
    prune(&mut temp_nodes, &PRUNE_2);
    run_level(&mut temp_nodes, &LEVEL_3);
    prune(&mut temp_nodes, &PRUNE_3);
    run_level(&mut temp_nodes, &LEVEL_4);
    prune(&mut temp_nodes, &PRUNE_4);
    run_level(&mut temp_nodes, &LEVEL_5);
    prune(&mut temp_nodes, &PRUNE_5);
    run_level(&mut temp_nodes, &LEVEL_6);
    prune(&mut temp_nodes, &PRUNE_6);
    run_level(&mut temp_nodes, &LEVEL_7);
    prune(&mut temp_nodes, &PRUNE_7);
    run_level(&mut temp_nodes, &LEVEL_8);
    prune(&mut temp_nodes, &PRUNE_8);
    run_level(&mut temp_nodes, &LEVEL_9);
    prune(&mut temp_nodes, &PRUNE_9);
    run_level(&mut temp_nodes, &LEVEL_10);
    prune(&mut temp_nodes, &PRUNE_10);
    run_level(&mut temp_nodes, &LEVEL_11);
    prune(&mut temp_nodes, &PRUNE_11);
    run_level(&mut temp_nodes, &LEVEL_12);
    prune(&mut temp_nodes, &PRUNE_12);

            

                out.into_iter().map(|c| c.unwrap()).collect()
            }),
        )
        .unwrap()
}

